//1. WAP to accept an array of n integers and calculate sum of odd numbers and even numbers using the 
//pointer to an array.

#include<stdio.h>

void main()
{
	int a[40],i,n,even=0,odd=0;
	int *p=a;
	
	printf("Enter value of n:");
	scanf("%d",&n);
	
	printf("Enter elements:");
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);
	}
	
	for(i=0;i<n;i++)
	{
		if(p[i]%2==0)
		{
			even=even+p[i];
		}
		else
		{
			odd=odd+p[i];
		}
			
	}
	printf("sum of even numbers=%d\n",even);
	printf("sum of odd numbers=%d",odd);	
}

o/p-
Enter value of n:5
Enter elements:1 4 7 3 2
sum of even numbers=6
sum of odd numbers=11


//2. Write a function isEven, which accepts an integer as parameter and returns 1 if the number is even, and 
//0 otherwise. Use this function in main to accept n numbers and ckeck if they are even or odd.

#include<stdio.h>

void main()
{
	int n,i;
	
	printf("Enter a number:");
	scanf("%d",&n);
	i=isEven(n);
	if(i==1)
		printf("Number is even");
	else
		printf("Number is odd");	
}

int isEven(int n)
{
	if(n%2==0)
		return 1;
	else
		return 0;
}
o/p-
Enter a number:4
Number is even
Enter a number:3
Number is odd

//3. Write a function isPrime, which accepts an integer as parameter and returns 1 if the number is prime 
//and 0 otherwise. Use this function in main to display the first 10 prime numbers. 


#include<stdio.h>
 
int check_prime(int);
 
main()
{
   int n, result;
 
   printf("Enter an integer to check whether it is prime or not.\n");
   scanf("%d",&n);
 
   result = check_prime(n);
 
   if ( result == 1 )
      printf("%d is prime.\n", n);
   else
      printf("%d is not prime.\n", n);
 
   return 0;
}
 
int check_prime(int a)
{
   int c;
 
   for ( c = 2 ; c <= a-1 ; c++ )
   { 
      if ( a%c == 0 )
     return 0;
   }
   return 1;
}
 
o/p-
Enter an integer to check whether it is prime or not.
7
7 is prime.

//4.For the following standard functions, write corresponding user defined functions and write a menu 
//driven program to use them. strcat, strcmp, strrev, strupr.

#include<stdio.h>
#include<stdlib.h>
#include<ctype.h>
#include<string.h>
void StrCat(char str[],char str1[]); // StrCat() user defined Function in c Prototype
void StrCmp(char str[],char str1[]); // StrCmp() Function Prototype
void StrRev(char str[]); // StrRev() Function Prototype
void StrUpr(char str[]); // StrUpr() Function Prototype
 
int main()
{
 char str[20],str1[20],ch;
 int ope;
 do{
 printf("\n****Menu****");
 printf("\n 1.strcat");
 printf("\n 2.strcmp");
 printf("\n 3.strrev");
 printf("\n 4.strupr");
 printf("\n 5.Exit \n");
 printf("\n Which function do you want to use:- ");
 scanf("%d",&ope);
 if(ope==1 || ope==2)
 { 
 printf("\n Enter first string (20 Characters Max):- ");
 scanf("%s",str);
 printf("\n Enter second string (20 Characters Max):- ");
 scanf("%s",str1);
 } 
 else if(ope==3 || ope==4 )
 {
 printf("\n Enter any string (20 Characters Max):- ");
 scanf("%s",str);
 }
 switch(ope)
 {
 case 1:
 StrCat(str,str1);
 break;
 case 2:
 StrCmp(str,str1);
 break;
 case 3:
 StrRev(str);
 break;
 case 4:
 StrUpr(str);
 break;
  
 default:
 printf("\n Invalid Choice. \n \n");
 }}while(ch!=5);
 return 0;
} // End of main
// StrCat() user defined function in C to concatenate two strings without using string functions
void StrCat(char str[],char str1[])
{
 int i,j=0;
 for(i=(strlen(str)-1);i<=(strlen(str)+strlen(str1)-2);i++)
 { 
 str[i]=str1[j];
 j++;
 }
 
 printf("\n The Concatenation of two strings is \"%s\" \n \n",str);
}
// StrCmp() function to compare two strings without string library
void StrCmp(char str[],char str1[])
{
 int i,j=0,LED=0;
 for(i=0;i<=strlen(str)-1;i++)
 { 
 if(str[i]!=str1[j])
 {
  LED=1;
  break;
 }
 j++;
 }
 if(LED==0)
  printf("\n Two strings is \"%s\" and \"%s\" are same \n \n",str,str1);   
 else
  printf("\n Two strings is \"%s\" and \"%s\" are  not same \n \n",str,str1); 
}
// Implicit declaration of StrRev() function to reverse a string without using string functions
void StrRev(char str[])
{
 char str1[20];
 int i,j=0;
 for(i=strlen(str)-1;i>=0;i--)
= {
 str1[j]=str[i];
 j++;
 }
 printf("\n The reverse string of \"%s\" is \"%s\" \n \n",str,str1);
}

// StrUpr() Function to make all characters in upper case in given string
void StrUpr(char str[])
{
 char ch,str1[20];
 int i;
 for(i=0;i<=strlen(str)-1;i++)
 {
 ch=toupper(str[i]);
 str1[i]=ch;
 }
 
 printf("\n The uppercase string of \"%s\" is \"%s\" \n \n",str,str1);
}
0/p-
****Menu****
 1.strcat
 2.strcmp
 3.strrev
 4.strupr
 5.Exit

 Which function do you want to use:- 1

 Enter first string (20 Characters Max):- anshuja

 Enter second string (20 Characters Max):- meshram

 The Concatenation of two strings is "anshujmeshram"


****Menu****
 1.strcat
 2.strcmp
 3.strrev
 4.strupr
 5.Exit

 Which function do you want to use:- 2

 Enter first string (20 Characters Max):- fruit

 Enter second string (20 Characters Max):- fruit

 Two strings is "fruit" and "fruit" are same


****Menu****
 1.strcat
 2.strcmp
 3.strrev
 4.strupr
 5.Exit

 Which function do you want to use:- 3

 Enter any string (20 Characters Max):- blue

 The reverse string of "blue" is "eulb"


****Menu****
 1.strcat
 2.strcmp
 3.strrev
 4.strupr
 5.Exit

 Which function do you want to use:- 4

 Enter any string (20 Characters Max):- anshu

 The uppercase string of "anshu" is "ANSHU"


****Menu****
 1.strcat
 2.strcmp
 3.strrev
 4.strupr
 5.Exit

 Which function do you want to use:- 5

 Invalid Choice.

//5. Write a function power, which calculates x raised to y . Write another function, which calculates n! Using 
for loop. Use these functions to calculate the sum of first n terms of the Taylor series: 
 sin(x) = x - 3! 3 x + 5! 5 x + ……

#include<stdio.h>
#include<math.h>
void calc();
void main()
{
 calc();
}
void calc()
{
    int x,i;
    int fact = 1,num;
    float sum=0;
 
    printf("\nEnter the value of x in the series :  ");
    scanf("%d",&x);

    printf("\nEnter the number of terms in the series  :   ");
    scanf("%d",&num);
 
    for(i=1;i<num;i++)
    {
        fact = fact*i;
        sum = sum + (pow(x,i)/fact) ;
    }
    sum= sum +1;
    printf("\nThe sum of the taylor series is :  %.2f\n\n",sum);
}
o/p-
Enter the value of x in the series :  5
Enter the number of terms in the series  :   10
The sum of the taylor series is :  143.69

//6.Write a recursive C function to calculate the GCD of two numbers. Use this function in main.
 The GCD is calculated as : 
 gcd(a,b) = a if b = 0 
 = gcd (b, a mod b) otherwise

#include <stdio.h>  
#include <conio.h>  
int GCD_Rec(int num1, int num2);
int main()  
{  
    int num1, num2;  
    printf( " Enter any two numbers \n");  
    scanf("%d %d", &num1, &num2);  
      
    // call and print the GCD of two number using GCD_Rec()  
    printf(" GCD of two numbers %d and %d is %d", num1, num2, GCD_Rec(num1, num2));  
    return 0;  
}  
  
int GCD_Rec(int num1, int num2)  
{  
    if (num2 != 0)  
    {  
        return GCD_Rec( num2, num1 % num2);  
    }  
    else  
    {  
        return num1;  
    }  
}

o/p-
Enter any two positive numbers:
60
48
GCD of two numbers 60 and 48 is 12
//7. Write a recursive C function to calculate x raised to y . (Do not use standard library function
#include <stdio.h>
int power (int, int);
int main()
{
    int pow, num;
    long result;

    printf("Enter a number: ");
    scanf("%d", &num);
    printf("Enter it's power: ");
    scanf("%d", &pow);
    result = power(num, pow);
    printf("%d^%d is %ld", num, pow, result);
    return 0;
}

int power (int num, int pow)
{
    if (pow)
    {
        return (num * power(num, pow - 1));
    }
    return 1;
}

Output:

Enter a number: 4
Enter it's power: 5
4^5 is 1024

//8. Write a recursive function to calculate the sum of digits of a number till you get a single digit number. 
 //Example: 961 -> 16 -> 5. (Note: Do not use a loop)

#include <stdio.h>
 
// Function to check sum of digit using recursion
int sum_of_digit(int n)
{
    if (n == 0)
       return 0;
    return (n % 10 + sum_of_digit(n / 10));
}
 
// Driven Program to check above
int main()
{
    int num ;
    
    printf("Enter a number:");
    scanf("%d",&num);
    
    int result = sum_of_digit(num);
    printf("Sum of digits in %d is %d\n", num, result);
    return 0;
}
o/p-
Enter a number:12345
Sum of digits in 12345 is 15

//9. Write a recursive function to calculate the nth Fibonacci number. Use this function in main to display the 
first n Fibonacci numbers. 
 The recursive definition of nth Fibonacci number is as follows: 
 fib(n) = 0 if n = 1
 = 1 if n = 2
 = fib(n-2) + fib(n-1) if n>2

#include<stdio.h>

int fibo(int );

void main()
{
	int n,f,i;
	
	printf("Enter number:");
	scanf("%d",&n);
	
	for(i=0;i<n;i++)
	{
	f=fibo(i);
	printf("%d ",f);
	}
	
	
}

int fibo(int n)
{
	if(n==0)
		return 0;
	else if(n==1)
			return 1;
	else
		return fibo(n-1)+fibo(n-2);		
}
0/p-
Enter number:10
0 1 1 2 3 5 8 13 21 34